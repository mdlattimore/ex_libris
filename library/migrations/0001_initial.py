# Generated by Django 5.2.1 on 2025-10-14 12:42

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('dod', models.DateField(blank=True, null=True)),
                ('nationality', models.CharField(blank=True, max_length=50, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('sort_name', models.CharField(blank=True, max_length=150, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BookSpotlight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True, null=True)),
                ('author', models.CharField(blank=True, max_length=150, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Book Spotlights',
            },
        ),
        migrations.CreateModel(
            name='BoxSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('isbn10', models.CharField(blank=True, max_length=10, null=True)),
                ('isbn13', models.CharField(blank=True, max_length=13, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('slug', models.SlugField(unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('subtitle', models.CharField(blank=True, max_length=200, null=True)),
                ('author', models.CharField(max_length=200)),
                ('publisher', models.CharField(blank=True, max_length=200, null=True)),
                ('publication_date', models.CharField(blank=True, max_length=50, null=True)),
                ('number_of_pages', models.CharField(blank=True, max_length=10, null=True)),
                ('isbn_10', models.CharField(blank=True, max_length=15, null=True)),
                ('isbn_13', models.CharField(blank=True, max_length=20, null=True)),
                ('cover_id', models.CharField(blank=True, max_length=250, null=True)),
                ('owned', models.BooleanField(default=True)),
                ('date_acquired', models.DateField(blank=True, null=True)),
                ('source', models.CharField(blank=True, max_length=150, null=True)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('est_value', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('binding', models.CharField(blank=True, choices=[('HC', 'Hardcover'), ('PB', 'Paperback'), ('LI', 'Library Binding'), ('EB', 'Ebook'), ('OT', 'Other')], max_length=30, null=True)),
                ('condition', models.CharField(blank=True, choices=[('AN', 'As New'), ('FI', 'Fine'), ('NF', 'Near Fine'), ('VG', 'Very Good'), ('GO', 'Good'), ('FA', 'Fair'), ('RC', 'Reading Copy')], max_length=30, null=True)),
                ('dust_jacket', models.BooleanField(default=False)),
                ('dust_jacket_condition', models.CharField(blank=True, choices=[('AN', 'As New'), ('FI', 'Fine'), ('NF', 'Near Fine'), ('VG', 'Very Good'), ('GO', 'Good'), ('FA', 'Fair'), ('RC', 'Reading Copy')], max_length=30, null=True)),
                ('signed_by_author', models.BooleanField(default=False)),
                ('is_collectible', models.BooleanField(default=False)),
                ('collectible_notes', models.TextField(blank=True, null=True)),
                ('sort_name', models.CharField(max_length=150)),
                ('sort_title', models.CharField(max_length=150)),
                ('google_info', models.CharField(blank=True, max_length=200, null=True)),
                ('book_json', models.TextField(blank=True, null=True)),
                ('book_spotlight', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='editions', to='library.bookspotlight')),
                ('boxset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='books', to='library.boxset')),
                ('collection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='books', to='library.collection')),
                ('genres', models.ManyToManyField(blank=True, related_name='book_genres', to='library.genre')),
            ],
        ),
        migrations.CreateModel(
            name='BookImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('thumbnail', models.ImageField(blank=True, editable=False, null=True, upload_to='images/thumbnails/')),
                ('is_cover', models.BooleanField(default=False)),
                ('view_type', models.CharField(blank=True, choices=[('left', 'Left'), ('spine', 'Spine'), ('right', 'Right'), ('other', 'Other')], max_length=20, null=True)),
                ('caption', models.CharField(blank=True, max_length=200, null=True)),
                ('book', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='images', to='library.book')),
                ('spotlight_cover', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='spotlight_images', to='library.bookspotlight')),
                ('boxset', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='boxset_images', to='library.boxset')),
            ],
            options={
                'verbose_name_plural': 'Book Images',
                'constraints': [models.UniqueConstraint(condition=models.Q(('is_cover', True)), fields=('book',), name='unique_cover_per_book'), models.UniqueConstraint(condition=models.Q(('is_cover', True)), fields=('boxset',), name='unique_cover_per_boxset'), models.UniqueConstraint(condition=models.Q(('boxset__isnull', False), ('view_type__in', ['front', 'back', 'spine'])), fields=('boxset', 'view_type'), name='unique_boxset_view_type_except_other')],
            },
        ),
    ]
